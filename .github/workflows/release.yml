name: Build and Upload EXE on Release

on:
  release:
    types: [published]

jobs:
  build_windows:
    runs-on: windows-2019
    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置Python环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: 打包
        run: |
          pip install py7zr
          cd D:\a\github_action_test\github_action_test
          python .\build.py 
          py7zr c ./mydist.7z ./dist/main

      - name: 上传EXE到Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./mydist.7z
          asset_name: main-windows-server-2019.7z
          asset_content_type: application/octet-stream

  build_ubuntu:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Build
        run: |
          sudo apt update
          sudo apt install xvfb -y
          Xvfb :0 -screen 0 1024x768x24 &
          export DISPLAY=:0
          
          pip install py7zr
          cd ~/work/github_action_test/github_action_test
          python3 ./build.py 
          py7zr c ./mydist.7z ./dist/main
      - name: Upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./mydist.7z
          asset_name: main-ubuntu-20-04.7z
          asset_content_type: application/octet-stream

  build_macos:
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Build
        run: |
          cd ~/work/github_action_test/github_action_test
          python3 ./build.py && python3 -c "import shutil; shutil.make_archive('./mydist', 'zip', './dist/main')"
      - name: Upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./mydist.zip
          asset_name: main-macos.zip
          asset_content_type: application/octet-stream